apiVersion: v1
kind: Service
metadata:
  name: kafka-controller-hs
spec:
  ports:
    - name: quorum-voter
      port: 9093
  clusterIP: None
  selector:
    app: kafka-controller
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: kafka-controller-cs
# spec:
#   ports:
#     - name: client
#       port: 9093

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: 
    kafka-controller-pdb
spec:
  selector:
    matchLabels:
      app: kafka-controller
  maxUnavailable: 1
  
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kafka
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      name: kafka
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: localhost:5000/k8s-kafka:latest
          # image: docker.io/apache/kafka:3.9.1-rc1
          imagePullPolicy: IfNotPresent
          # env:
          #   - name: POD_NAME
          #     valueFrom:
          #       fieldRef:
          #         fieldPath: metadata.name
          # command: ["sh", "-c"]
          #   KAFKA_NODE_ID
          #   KAFKA_PROCESS_ROLES: broker,controller
          #   KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
          #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          #   KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
          #   KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
          #   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          #   KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          #   KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          #   KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          #   KAFKA_NUM_PARTITIONS: 1

